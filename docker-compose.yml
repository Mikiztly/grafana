# Conjunto de servidores que funcionan para hacer monitoreo de equipos
# Le doy un nombre descriptivo al stack para saber de que se trata
name: monitoreo

services:
  # Base de datos para utilizar con grafana, sirve para recolectar datos de varias fuentes
  # https://prometheus.io/docs/prometheus/latest/installation/
  # https://docker-ip:9090/
  prometheus:
     # Le doy un nombre al dock
    container_name: prometheus
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always
    # Configuracion de puertos, no lo declara puertos ya que uso la configuracion de la red y NPM
    # ports:
     # - '9090:9090'
    # Configuracion de discos
    # Es muy importante que los directorios existan para que el stack funcione
    volumes:
      - ${DOCKER_PATH}/prometheus/config:/etc/prometheus
      - ${DOCKER_PATH}/prometheus/data:/prometheus
    depends_on:
      - node-exporter
      - blackbox-exporter
      - cadvisor
    # Le doy un nombre al host para referirlo con NPM
    hostname: prometheus
    networks:
      lan_docker:
        # Si queremos darle una IP estatica cambiamos la siguiente linea
        # ipv4_address: 192.168.200.254
  # FIN prometheus

  # Motor para crear graficos y dashboards desde distintos servicios, proetheus, loki, zabbix, etc
  # https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/
  # https://docker-ip:3000/
  grafana:
    # Le doy un nombre al dock
    container_name: grafana
    image: grafana/grafana-oss
    restart: always
    # Configuracion de puertos, no lo declara puertos ya que uso la configuracion de la red y NPM
    # ports:
      # - "3000:3000"
    # Hago varias configuraciones interesantes
    environment:
      # Le doy una url para que sea mas facil ingresar
      - GF_SERVER_ROOT_URL=http://grafana.servidor.com/
      # Plugin de un reloj bastante configurable
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      # Plugin para obtener datos desde zabbix
      # - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
      # Se puede definir un usuario y contrase√±a para no utilizar el que viene por defecto
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=CambiaMe
    # Configuracion de discos
    # Es muy importante que los directorios existan para que el stack funcione
    volumes:
      - ${DOCKER_PATH}/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    # Le doy un nombre al host para referirlo con NPM
    hostname: grafana
    networks:
      lan_docker:
        # Si queremos darle una IP estatica cambiamos la siguiente linea
        # ipv4_address: 192.168.200.254
  # FIN grafana

  # Contenedor para obtener informacion de la maquina
  # https://github.com/prometheus/node_exporter
  # https://prometheus.io/docs/guides/node-exporter/
  node-exporter:
    # Le doy un nombre al dock
    container_name: node-exporter
    image: prom/node-exporter:latest
    restart: unless-stopped
    # Como es en el mismo servidor donde se corre este exporter no abro el puerto
    # ports:
      # - '9100:9100'
    # No tiene directorios especiales ya que guarda los datos en la BD de prometheus
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    # Le doy un nombre al host para referirlo en la configuracion de prometheus
    hostname: node-exporter
    networks:
      lan_docker:
        # Si queremos darle una IP estatica cambiamos la siguiente linea
        # ipv4_address: 192.168.200.254
  # FIN node-exporter

  # Este contenedor es el que va a monitoreear los certificados ssl de docker
  # https://github.com/ribbybibby/ssl_exporter
  # https://grafana.com/grafana/dashboards/11279-ssl-cerificates/
  ssl-cert:
    container_name: ssl-cert
    image: ribbybibby/ssl-exporter
    restart: unless-stopped
    ports:
      - '9219:9219'
    # Le doy un nombre al stack para referirlo con NPM y le damos la red correspondiente
    hostname: ssl-cert
    networks:
      lan_docker:
  # FIN ssl-cert

  # Con este contenedor vamos a obtener informacion de cualquier pagina web
  # https://github.com/prometheus/blackbox_exporter
  # https://github.com/prometheus-community/prometheus-playground/blob/master/blackbox-exporter/docker-compose.yml
  blackbox-exporter:
    # Le doy un nombre al dock
    container_name: blackbox-exporter
    image: prom/blackbox-exporter:latest
    restart: unless-stopped
    # Como es en el mismo servidor donde se corre este exporter no abro el puerto
    # ports:
      # - '9115:9115'
    # Le doy un nombre al host para referirlo en la configuracion de prometheus
    hostname: blackbox-exporter
    networks:
      lan_docker:
      # Si queremos darle una IP estatica cambiamos la siguiente linea
      # ipv4_address: 192.168.200.254
  # FIN blackbox-exporter

  # Este contenedor monitorizamos docker
  # https://prometheus.io/docs/guides/cadvisor/#docker-compose-configuration
  # https://grafana.com/grafana/dashboards/893-main/
  # https://github.com/google/cadvisor
  cadvisor:
    # Le doy un nombre al dock
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor #google/cadvisor:latest
    restart: unless-stopped
    # Como es en el mismo servidor donde se corre este exporter no abro el puerto
    # ports:
      # - '8080:8080'
    # No tiene directorios especiales ya que guarda los datos en la BD de prometheus
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    # Le doy un nombre al host para referirlo en la configuracion de prometheus 
    hostname: cadvisor
    networks:
      lan_docker:
      # Si queremos darle una IP estatica cambiamos la siguiente linea
      # ipv4_address: 192.168.200.254
  # FIN cadvisor

  # Este es un explorador de archivos donde podemos ver editar , subir, etc archivos desde el servidor. Muy util para evitar utilizar ssh o ftp
  # https://filebrowser.org/installation
  # Usuario y Password: admin
#  file-browser:
    # Le doy un nombre al dock
#    container_name: file-browser
#    image: filebrowser/filebrowser
    # Configuracion de puertos, no lo declara puertos ya que uso la configuracion de la red y NPM
    # ports:
      # - "8080:80"
#    restart: always
    # Le activo la terminal
#    tty: true
    # Configuracion de discos, con esto le vamos a indicar en que directorio estan los archivos de configuracion de nuestro stack
#    volumes:
#      - /mnt/docker-data:/srv
    # Le doy un nombre al host para referirlo con NPM
#    hostname: file-browser
#    networks:
#      lan_docker:
# FIN file-browser

# Declaramos la red que vamos a utilizar
networks:
  # Configuracion de la red lan_docker, si ya hay una red configurada dejamos esta linea y cambiamos el nombre por el correcto
  lan_docker:
    external: true
    # Para utilizar solo este repositorio hay que configurar bien la red, comentar la linea de arriba y dejal activas las siguientes:
    # driver: bridge
    # ipam:
      # config:
        # - subnet: 192.168.200.0/24
          # gateway: 192.168.200.1

